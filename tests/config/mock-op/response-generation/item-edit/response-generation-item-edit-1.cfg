[MAIN]
config-path = ./tests/config/mock-op/responses-item-edit
response-path = responses-1
input-path = input
response-dir-file = response-directory-1.json
state-iteration = 0
state-config = ./tests/config/mock-op/responses-item-edit/item-edit-state-config.json
# Be sure to set RESP_GEN_DOT_ENV_FILE=path/to/.env_corrupt_svc_account
# to have response-generator load the service account token
existing-auth = required

[cli-version]
type = cli-version
enabled = false

[list-signed-in-accounts]
type = account-list
enabled = false

[whoami]
type = whoami
enabled = false

[item-get-example-login-00]
# OP.item_edit_set_password() peforms an item_get() first
# so we need to support a get operation on the unedited item
type=item-get
item_identifier = Example Login Item 00
vault = Test Data 2
enabled = false

[item-edit-example-login-00-set-password]
type=item-edit
subtype=set-password
item_identifier = Example Login Item 00
field_label = password
password = new password
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-01]
# OP.item_edit_generate_password() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
type=item-get
item_identifier = Example Login Item 01
vault = Test Data 2
enabled = false

[item-edit-example-login-01-generate-password]
type=item-edit
subtype=generate-password
item_identifier = Example Login Item 01
password-recipe = 20,letters,digits
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-02]
# OP.item_edit_set_title() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
type=item-get
item_identifier = Example Login Item 02
vault = Test Data 2
enabled = false

[item-edit-example-login-02-set-title]
type=item-edit
subtype=set-title
item_identifier = Example Login Item 02
item-title = Example Login Item 02 (New Title)
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-03]
# OP.item_edit_set_password() peforms an item_get() first
# so we need to support a get operation on the unedited item
type=item-get
item_identifier = Example Login Item 03
vault = Test Data 2
enabled = false

[item-edit-example-login-03-set-password]
type=item-edit
subtype=set-password
item_identifier = Example Login Item 03
section_label = Example Section
field_label = password in a section
password = new password in a section
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-04]
# OP.item_edit_set_favorite() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
#
# for item_edit_set_favorite
# favorite should be false in this response before
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 04
vault = Test Data 2
enabled = false

[item-edit-example-login-04-set-favorite]
# set the favorite flag on this item to true
type=item-edit
subtype=set-favorite
item_identifier = Example Login Item 04
item-favorite = true
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-05]
# OP.item_edit_set_favorite() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
#
# for item_edit_set_favorite
# favorite should be true in this response before
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 05
vault = Test Data 2
enabled = false

[item-edit-example-login-05-set-favorite]
# set the favorite flag on this item to false
type=item-edit
subtype=set-favorite
item_identifier = Example Login Item 05
item-favorite = false
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-06]
# OP.item_edit_set_tags() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
#
# for item_edit_set_tags
# tags should be [tag_1, tag_2] in this response before
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 06
vault = Test Data 2
enabled = false

[item-edit-example-login-06-set-tags]
# set the new set of tags on this item
type=item-edit
subtype=set-tags
item_identifier = Example Login Item 06
tags=tag_3,tag_4,tag_5
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-07]
# OP.item_edit_set_tags() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
#
# for item_edit_set_tags
#
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 07
vault = Test Data 2
enabled = false

[item-edit-example-login-07-set-tags]
# set a new set of tags on this item
type=item-edit
subtype=set-tags
item_identifier = Example Login Item 07
tags= tag_1,tag_2,tag_3
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-08]
# OP.item_edit_set_tags() peforms an item_get() first
# so we need to support a get operation on the unedited item
#
# for item_edit_set_tags
#
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 08
vault = Test Data 2
enabled = false

[item-edit-example-login-08-set-tags]
# set a new set of tags on this item
type=item-edit
subtype=set-tags
item_identifier = Example Login Item 08
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-08a]
# OP.item_edit_set_tags() peforms an item_get() first
# so we need to support a get operation on the unedited item
#
# for item_edit_set_tags
#
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 08a
vault = Test Data 2
enabled = false

[item-edit-example-login-08a-set-tags]
# set a new set of tags on this item
type=item-edit
subtype=set-tags
item_identifier = Example Login Item 08a
# these tags overlap with the original tags
tags = tag_3,tag_4,tag_5
append-tags = True
vault = Test Data 2
changes_state = true
enabled = false

[item-get-example-login-09]
# OP.item_edit_set_url() does not require this
# but our test cases to explicitly perform an item_get() on the
# unmodified item, so we need this
#
# for item_edit_set_tags
#
# the item-edit operation below
type=item-get
item_identifier = Example Login Item 09
vault = Test Data 2
enabled = true

[item-edit-example-login-09-set-tags]
# set the new set of tags on this item to false
type=item-edit
subtype=set-url
item_identifier = Example Login Item 09
url = https://item-09-url.com/login.html
vault = Test Data 2
changes_state = true
enabled = true
